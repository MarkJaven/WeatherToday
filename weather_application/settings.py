"""
Django settings for weather_application project.

Generated by 'django-admin startproject' using Django 5.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-rt535iz1cnq0y(qrp4+6jtrd6)titdv@y^n@po+t@@k#v^jg4&'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'weather_app',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'weather_application.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'weather_app', 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'weather_application.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/
STATIC_URL = '/static/'
STATICFILES_DIRS = [
BASE_DIR / "static",  # This points to the new static directory we just created
]
STATIC_ROOT = BASE_DIR / "staticfiles"  # This is where collected static files are stored.

# Background image map - Ensure paths match existing image files in static/images/
# Background image map - Ensure paths match existing image files in static/images/
background_image_map = {
    'new york': '/static/images/new-york.jpg',
    'london': '/static/images/london.jpg',
    'paris': '/static/images/paris.jpg',
    'tokyo': '/static/images/tokyo.jpg',
    'sydney': '/static/images/sydney.jpg',
    'beijing': '/static/images/beijing.jpg',
    'moscow': '/static/images/moscow.jpg',
    'rio de janeiro': '/static/images/rio-de-janeiro.jpg',
    'mumbai': '/static/images/mumbai.jpg',
    'shanghai': '/static/images/shanghai.jpg',
    'bangkok': '/static/images/bangkok.jpg',
    'cape town': '/static/images/cape-town.jpg',
    'dubai': '/static/images/dubai.jpg',
    'istanbul': '/static/images/istanbul.jpg',
    'berlin': '/static/images/berlin.jpg',
    'madrid': '/static/images/madrid.jpg',
    'rome': '/static/images/rome.jpg',
    'athens': '/static/images/athens.jpg',
    'cairo': '/static/images/cairo.jpg',
    'jakarta': '/static/images/jakarta.jpg',
    'hong kong': '/static/images/hong-kong.jpg',
    'seoul': '/static/images/seoul.jpg',
    'vienna': '/static/images/vienna.jpg',
    'oslo': '/static/images/oslo.jpg',
    'stockholm': '/static/images/stockholm.jpg',
    'helsinki': '/static/images/helsinki.jpg',
    'lisbon': '/static/images/lisbon.jpg',
    'warsaw': '/static/images/warsaw.jpg',
    'prague': '/static/images/prague.jpg',
    'zurich': '/static/images/zurich.jpg',
    'brussels': '/static/images/brussels.jpg',
    'amsterdam': '/static/images/amsterdam.jpg',
    'buenos aires': '/static/images/buenos-aires.jpg',
    'santiago': '/static/images/santiago.jpg',
    'bogota': '/static/images/bogota.jpg',
    'nairobi': '/static/images/nairobi.jpg',
    'kuala lumpur': '/static/images/kuala-lumpur.jpg',
    'singapore': '/static/images/singapore.jpg',
    'manila': '/static/images/manila.jpg',
    'hanoi': '/static/images/hanoi.jpg',
    'melbourne': '/static/images/melbourne.jpg',
    'perth': '/static/images/perth.jpg',
    'auckland': '/static/images/auckland.jpg',
    'doha': '/static/images/doha.jpg',
    'riyadh': '/static/images/riyadh.jpg',
    'johannesburg': '/static/images/johannesburg.jpg',
    'lagos': '/static/images/lagos.jpg',
    'venice': '/static/images/venice.jpg',
}


# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
